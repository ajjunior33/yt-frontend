import Head from 'next/head'
import { Button, Card, Container, Dropdown, Input, Loading, Text } from '@nextui-org/react'
import { useState } from 'react';
import { SpeakerSlash } from 'phosphor-react';

export default function Home() {
  const [url, setUrl] = useState("");
  const [embed, setEmebed] = useState("");
  const [listFormats, setListFormats] = useState([]);
  const [loading, setLoading] = useState(false);

  function goToURL(url: any): void {
    window.open(url, '_blank') as any;
  }

  function handleDownload() {
    setLoading(true);
    fetch(`${process.env.NEXT_PUBLIC_BASE_URL}/?url=${url}`)
      .then(response => response.json())
      .then(response => {
        setEmebed(response.url)
        setListFormats(response.info);
        setLoading(false);
      })
      .catch(err => {
        console.error(err);
        setLoading(false);
      })


  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container alignItems='center' display='flex' justify='center' md css={{ marginTop: 50, padding: 50, paddingBottom: 120 }}>
        <Card isHoverable variant='bordered' css={{ mw: 640, padding: 20 }}>
          <Text h3 css={{ textAlign: "center", textGradient: "45deg, $yellow600 -20%, $red600 100%" }} >Insira o link do video</Text>
          <Input
            clearable
            bordered
            labelPlaceholder="URL"
            size={"lg"}
            css={{
              marginTop: 20,
              marginBottom: 10
            }}
            onChange={e => setUrl(e.target.value)}
            value={url}
          />

          {loading === true ? (


            <Button disabled auto bordered color="success" css={{ px: "$13" }}>
              <Loading type="points" color="currentColor" size="sm" />
            </Button>
          ) : (
            <Button
              color="primary"
              shadow
              auto
              css={{ marginTop: 10 }}
              onPress={handleDownload}
            >
              Buscar
            </Button>
          )}

        </Card>

        {listFormats.length > 0 && (

          <Card isHoverable variant='bordered' css={{ mw: 640, padding: 20, marginTop: 30 }}>
            <iframe width="560" height="315" src={embed} title="YouTube video player" style={{border:"none"}} allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"></iframe>

            {/* <Button css={{marginTop: 20}} size={"md"} color="success">Download</Button> */}

            <Dropdown placement='bottom-left'>
              <Dropdown.Button css={{ marginTop: 30 }}>Download</Dropdown.Button>
              <Dropdown.Menu items={listFormats} onAction={(url) => goToURL(url)}>

                {(item: any) => (
                  <Dropdown.Item
                    key={item.url}
                  >
                    {item.mimeType.split(";")[0]} - {item.hasVideo ? item.height + "p" : ""}
                    {!item.hasAudio && (
                      <SpeakerSlash size={20} style={{ marginLeft: 20 }} color="#F31260" />
                    )}
                  </Dropdown.Item>
                )}
              </Dropdown.Menu>
            </Dropdown>
          </Card>
        )}


      </Container>
    </>
  )
}
